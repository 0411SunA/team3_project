[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team_Project3",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "유나.html",
    "href": "유나.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "현주.html",
    "href": "현주.html",
    "title": "여행을 선택하는 이유",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# 파일 불러오기\ndf = pd.read_excel(\"C:/Users/USER/Documents/LS빅데이터스쿨/LSBigdata_Project1/data/select.xlsx\")\ndf.head()\n\n# 변수 변경\ndf = df.rename(columns = {\"소계\" : \"total\", \"남자\" : \"male\", \"여자\" : \"female\"})\ndf.head()\n\n\n\n\n# 변수 추가 및 삭제\n\n# 연령대\ndf[\"teens\"] = df[\"15~19세\"]\ndf[\"young_adults\"] = df[\"20대\"] + df[\"30대\"]\ndf[\"middle_adults\"] = df[\"40대\"] + df[\"50대\"]\ndf[\"senior\"] = df[\"60대\"] + df[\"70세 이상\"]\n#2018 각 값을 열의 합계로 나눈뒤 100을 곱하여 백분율 계산. 소수점 1까지 반올림\ndf.loc[0:14, \"young_adults\"] = (df.loc[0:14, \"young_adults\"] / df.loc[0:14, \"young_adults\"].sum() * 100).round(1)\ndf.loc[0:14, \"middle_adults\"] = (df.loc[0:14, \"middle_adults\"] / df.loc[0:14, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[0:14, \"senior\"] = (df.loc[0:14, \"senior\"] / df.loc[0:14, \"senior\"].sum() * 100).round(1)\n#2019\ndf.loc[15:29, \"young_adults\"] = (df.loc[15:29, \"young_adults\"] / df.loc[15:29, \"young_adults\"].sum() * 100).round(1)\ndf.loc[15:29, \"middle_adults\"] = (df.loc[15:29, \"middle_adults\"] / df.loc[15:29, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[15:29, \"senior\"] = (df.loc[15:29, \"senior\"] / df.loc[15:29, \"senior\"].sum() * 100).round(1)\n#2020\ndf.loc[30:44, \"young_adults\"] = (df.loc[30:44, \"young_adults\"] / df.loc[30:44, \"young_adults\"].sum() * 100).round(1)\ndf.loc[30:44, \"middle_adults\"] = (df.loc[30:44, \"middle_adults\"] / df.loc[30:44, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[30:44, \"senior\"] = (df.loc[30:44, \"senior\"] / df.loc[30:44, \"senior\"].sum() * 100).round(1)\n#2021\ndf.loc[45:59, \"young_adults\"] = (df.loc[45:59, \"young_adults\"] / df.loc[45:59, \"young_adults\"].sum() * 100).round(1)\ndf.loc[45:59, \"middle_adults\"] = (df.loc[45:59, \"middle_adults\"] / df.loc[45:59, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[45:59, \"senior\"] = (df.loc[45:59, \"senior\"] / df.loc[45:59, \"senior\"].sum() * 100).round(1)\n#2022\ndf.loc[60:74, \"young_adults\"] = (df.loc[60:74, \"young_adults\"] / df.loc[60:74, \"young_adults\"].sum() * 100).round(1)\ndf.loc[60:74, \"middle_adults\"] = (df.loc[60:74, \"middle_adults\"] / df.loc[60:74, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[60:74, \"senior\"] = (df.loc[60:74, \"senior\"] / df.loc[60:74, \"senior\"].sum() * 100).round(1)\n\ndf = df.drop(['15~19세', '20대', '30대', '40대', '50대', '60대', '70세 이상'], axis=1)\n\n# 월급\ndf[\"l_sal\"] = df[\"100만원 미만\"] + df[\"100~200만원 미만\"]\ndf[\"m_sal\"] = df[\"200~300만원 미만\"] + df[\"300~400만원 미만\"] + df[\"400~500만원 미만\"]\ndf[\"h_sal\"] = df[\"500~600만원 미만\"] + df[\"600만원 이상\"]\n#2018\ndf.loc[0:14, \"l_sal\"] = (df.loc[0:14, \"l_sal\"] / df.loc[0:14, \"l_sal\"].sum() * 100).round(1)\ndf.loc[0:14, \"m_sal\"] = (df.loc[0:14, \"m_sal\"] / df.loc[0:14, \"m_sal\"].sum() * 100).round(1)\ndf.loc[0:14, \"h_sal\"] = (df.loc[0:14, \"h_sal\"] / df.loc[0:14, \"h_sal\"].sum() * 100).round(1)\n#2019\ndf.loc[15:29, \"l_sal\"] = (df.loc[15:29, \"l_sal\"] / df.loc[15:29, \"l_sal\"].sum() * 100).round(1)\ndf.loc[15:29, \"m_sal\"] = (df.loc[15:29, \"m_sal\"] / df.loc[15:29, \"m_sal\"].sum() * 100).round(1)\ndf.loc[15:29, \"h_sal\"] = (df.loc[15:29, \"h_sal\"] / df.loc[15:29, \"h_sal\"].sum() * 100).round(1)\n#2020\ndf.loc[30:44, \"l_sal\"] = (df.loc[30:44, \"l_sal\"] / df.loc[30:44, \"l_sal\"].sum() * 100).round(1)\ndf.loc[30:44, \"m_sal\"] = (df.loc[30:44, \"m_sal\"] / df.loc[30:44, \"m_sal\"].sum() * 100).round(1)\ndf.loc[30:44, \"h_sal\"] = (df.loc[30:44, \"h_sal\"] / df.loc[30:44, \"h_sal\"].sum() * 100).round(1)\n#2021\ndf.loc[45:59, \"l_sal\"] = (df.loc[45:59, \"l_sal\"] / df.loc[45:59, \"l_sal\"].sum() * 100).round(1)\ndf.loc[45:59, \"m_sal\"] = (df.loc[45:59, \"m_sal\"] / df.loc[45:59, \"m_sal\"].sum() * 100).round(1)\ndf.loc[45:59, \"h_sal\"] = (df.loc[45:59, \"h_sal\"] / df.loc[45:59, \"h_sal\"].sum() * 100).round(1)\n#2022\ndf.loc[60:74, \"l_sal\"] = (df.loc[60:74, \"l_sal\"] / df.loc[60:74, \"l_sal\"].sum() * 100).round(1)\ndf.loc[60:74, \"m_sal\"] = (df.loc[60:74, \"m_sal\"] / df.loc[60:74, \"m_sal\"].sum() * 100).round(1)\ndf.loc[60:74, \"h_sal\"] = (df.loc[60:74, \"h_sal\"] / df.loc[60:74, \"h_sal\"].sum() * 100).round(1)\n\n\ndf = df.drop(['100만원 미만', '100~200만원 미만', '200~300만원 미만', '300~400만원 미만', '400~500만원 미만',\\\n                '500~600만원 미만', '600만원 이상'], axis=1)\n# 가구\ndf = df.rename(columns = { '1인' : 'per1',\n            '2인' : 'per2',\n            '3인이상' : 'per3+'})\n\n# 학벌\ndf = df.rename(columns = { '초졸 이하' : 'elmt',\n             '중학교' : 'mid',\n            '고등학교' : 'high',\n            '대학교이상' : 'univ+'})\n# 무응답 NR\ndf = df.rename(columns = {\"무응답\" : \"nr\",\n                        \"시점\" : \"year\",\n                        \"항목\" : \"item\"})\ndf.info()\ndf.columns\n\n# 엑셀 파일로 내보내기\ndf.to_excel('pre_select.xlsx', index=False)\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 75 entries, 0 to 74\nData columns (total 20 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   year           75 non-null     int64  \n 1   item           75 non-null     object \n 2   total          75 non-null     float64\n 3   male           75 non-null     float64\n 4   female         75 non-null     float64\n 5   elmt           75 non-null     float64\n 6   mid            75 non-null     float64\n 7   high           75 non-null     float64\n 8   univ+          75 non-null     float64\n 9   per1           75 non-null     float64\n 10  per2           75 non-null     float64\n 11  per3+          75 non-null     float64\n 12  nr             15 non-null     float64\n 13  teens          75 non-null     float64\n 14  young_adults   75 non-null     float64\n 15  middle_adults  75 non-null     float64\n 16  senior         75 non-null     float64\n 17  l_sal          75 non-null     float64\n 18  m_sal          75 non-null     float64\n 19  h_sal          75 non-null     float64\ndtypes: float64(18), int64(1), object(1)\nmemory usage: 11.8+ KB"
  },
  {
    "objectID": "선아.html",
    "href": "선아.html",
    "title": "이삭토스트 맛있조",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "결론.html",
    "href": "결론.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "한결.html",
    "href": "한결.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "현주.html#전처리",
    "href": "현주.html#전처리",
    "title": "여행을 선택하는 이유",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# 파일 불러오기\ndf = pd.read_excel(\"C:/Users/USER/Documents/LS빅데이터스쿨/LSBigdata_Project1/data/select.xlsx\")\ndf.head()\n\n# 변수 변경\ndf = df.rename(columns = {\"소계\" : \"total\", \"남자\" : \"male\", \"여자\" : \"female\"})\ndf.head()\n\n\n\n\n# 변수 추가 및 삭제\n\n# 연령대\ndf[\"teens\"] = df[\"15~19세\"]\ndf[\"young_adults\"] = df[\"20대\"] + df[\"30대\"]\ndf[\"middle_adults\"] = df[\"40대\"] + df[\"50대\"]\ndf[\"senior\"] = df[\"60대\"] + df[\"70세 이상\"]\n#2018 각 값을 열의 합계로 나눈뒤 100을 곱하여 백분율 계산. 소수점 1까지 반올림\ndf.loc[0:14, \"young_adults\"] = (df.loc[0:14, \"young_adults\"] / df.loc[0:14, \"young_adults\"].sum() * 100).round(1)\ndf.loc[0:14, \"middle_adults\"] = (df.loc[0:14, \"middle_adults\"] / df.loc[0:14, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[0:14, \"senior\"] = (df.loc[0:14, \"senior\"] / df.loc[0:14, \"senior\"].sum() * 100).round(1)\n#2019\ndf.loc[15:29, \"young_adults\"] = (df.loc[15:29, \"young_adults\"] / df.loc[15:29, \"young_adults\"].sum() * 100).round(1)\ndf.loc[15:29, \"middle_adults\"] = (df.loc[15:29, \"middle_adults\"] / df.loc[15:29, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[15:29, \"senior\"] = (df.loc[15:29, \"senior\"] / df.loc[15:29, \"senior\"].sum() * 100).round(1)\n#2020\ndf.loc[30:44, \"young_adults\"] = (df.loc[30:44, \"young_adults\"] / df.loc[30:44, \"young_adults\"].sum() * 100).round(1)\ndf.loc[30:44, \"middle_adults\"] = (df.loc[30:44, \"middle_adults\"] / df.loc[30:44, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[30:44, \"senior\"] = (df.loc[30:44, \"senior\"] / df.loc[30:44, \"senior\"].sum() * 100).round(1)\n#2021\ndf.loc[45:59, \"young_adults\"] = (df.loc[45:59, \"young_adults\"] / df.loc[45:59, \"young_adults\"].sum() * 100).round(1)\ndf.loc[45:59, \"middle_adults\"] = (df.loc[45:59, \"middle_adults\"] / df.loc[45:59, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[45:59, \"senior\"] = (df.loc[45:59, \"senior\"] / df.loc[45:59, \"senior\"].sum() * 100).round(1)\n#2022\ndf.loc[60:74, \"young_adults\"] = (df.loc[60:74, \"young_adults\"] / df.loc[60:74, \"young_adults\"].sum() * 100).round(1)\ndf.loc[60:74, \"middle_adults\"] = (df.loc[60:74, \"middle_adults\"] / df.loc[60:74, \"middle_adults\"].sum() * 100).round(1)\ndf.loc[60:74, \"senior\"] = (df.loc[60:74, \"senior\"] / df.loc[60:74, \"senior\"].sum() * 100).round(1)\n\ndf = df.drop(['15~19세', '20대', '30대', '40대', '50대', '60대', '70세 이상'], axis=1)\n\n# 월급\ndf[\"l_sal\"] = df[\"100만원 미만\"] + df[\"100~200만원 미만\"]\ndf[\"m_sal\"] = df[\"200~300만원 미만\"] + df[\"300~400만원 미만\"] + df[\"400~500만원 미만\"]\ndf[\"h_sal\"] = df[\"500~600만원 미만\"] + df[\"600만원 이상\"]\n#2018\ndf.loc[0:14, \"l_sal\"] = (df.loc[0:14, \"l_sal\"] / df.loc[0:14, \"l_sal\"].sum() * 100).round(1)\ndf.loc[0:14, \"m_sal\"] = (df.loc[0:14, \"m_sal\"] / df.loc[0:14, \"m_sal\"].sum() * 100).round(1)\ndf.loc[0:14, \"h_sal\"] = (df.loc[0:14, \"h_sal\"] / df.loc[0:14, \"h_sal\"].sum() * 100).round(1)\n#2019\ndf.loc[15:29, \"l_sal\"] = (df.loc[15:29, \"l_sal\"] / df.loc[15:29, \"l_sal\"].sum() * 100).round(1)\ndf.loc[15:29, \"m_sal\"] = (df.loc[15:29, \"m_sal\"] / df.loc[15:29, \"m_sal\"].sum() * 100).round(1)\ndf.loc[15:29, \"h_sal\"] = (df.loc[15:29, \"h_sal\"] / df.loc[15:29, \"h_sal\"].sum() * 100).round(1)\n#2020\ndf.loc[30:44, \"l_sal\"] = (df.loc[30:44, \"l_sal\"] / df.loc[30:44, \"l_sal\"].sum() * 100).round(1)\ndf.loc[30:44, \"m_sal\"] = (df.loc[30:44, \"m_sal\"] / df.loc[30:44, \"m_sal\"].sum() * 100).round(1)\ndf.loc[30:44, \"h_sal\"] = (df.loc[30:44, \"h_sal\"] / df.loc[30:44, \"h_sal\"].sum() * 100).round(1)\n#2021\ndf.loc[45:59, \"l_sal\"] = (df.loc[45:59, \"l_sal\"] / df.loc[45:59, \"l_sal\"].sum() * 100).round(1)\ndf.loc[45:59, \"m_sal\"] = (df.loc[45:59, \"m_sal\"] / df.loc[45:59, \"m_sal\"].sum() * 100).round(1)\ndf.loc[45:59, \"h_sal\"] = (df.loc[45:59, \"h_sal\"] / df.loc[45:59, \"h_sal\"].sum() * 100).round(1)\n#2022\ndf.loc[60:74, \"l_sal\"] = (df.loc[60:74, \"l_sal\"] / df.loc[60:74, \"l_sal\"].sum() * 100).round(1)\ndf.loc[60:74, \"m_sal\"] = (df.loc[60:74, \"m_sal\"] / df.loc[60:74, \"m_sal\"].sum() * 100).round(1)\ndf.loc[60:74, \"h_sal\"] = (df.loc[60:74, \"h_sal\"] / df.loc[60:74, \"h_sal\"].sum() * 100).round(1)\n\n\ndf = df.drop(['100만원 미만', '100~200만원 미만', '200~300만원 미만', '300~400만원 미만', '400~500만원 미만',\\\n                '500~600만원 미만', '600만원 이상'], axis=1)\n# 가구\ndf = df.rename(columns = { '1인' : 'per1',\n            '2인' : 'per2',\n            '3인이상' : 'per3+'})\n\n# 학벌\ndf = df.rename(columns = { '초졸 이하' : 'elmt',\n             '중학교' : 'mid',\n            '고등학교' : 'high',\n            '대학교이상' : 'univ+'})\n# 무응답 NR\ndf = df.rename(columns = {\"무응답\" : \"nr\",\n                        \"시점\" : \"year\",\n                        \"항목\" : \"item\"})\ndf.info()\ndf.columns\n\n# 엑셀 파일로 내보내기\ndf.to_excel('pre_select.xlsx', index=False)\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 75 entries, 0 to 74\nData columns (total 20 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   year           75 non-null     int64  \n 1   item           75 non-null     object \n 2   total          75 non-null     float64\n 3   male           75 non-null     float64\n 4   female         75 non-null     float64\n 5   elmt           75 non-null     float64\n 6   mid            75 non-null     float64\n 7   high           75 non-null     float64\n 8   univ+          75 non-null     float64\n 9   per1           75 non-null     float64\n 10  per2           75 non-null     float64\n 11  per3+          75 non-null     float64\n 12  nr             15 non-null     float64\n 13  teens          75 non-null     float64\n 14  young_adults   75 non-null     float64\n 15  middle_adults  75 non-null     float64\n 16  senior         75 non-null     float64\n 17  l_sal          75 non-null     float64\n 18  m_sal          75 non-null     float64\n 19  h_sal          75 non-null     float64\ndtypes: float64(18), int64(1), object(1)\nmemory usage: 11.8+ KB"
  },
  {
    "objectID": "현주.html#년도별-여행지-선택-5순위",
    "href": "현주.html#년도별-여행지-선택-5순위",
    "title": "여행을 선택하는 이유",
    "section": "년도별 여행지 선택 5순위",
    "text": "년도별 여행지 선택 5순위\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# 한글 설정\nplt.rcParams['font.family'] ='Malgun Gothic'\nplt.rcParams['axes.unicode_minus'] =False\n\ndf = pd.read_excel(\"./pre_data/pre_select.xlsx\")\ndf\n\ndf_2018 = df.loc[0:14]\ndf_2019 = df.loc[15:29]\ndf_2020 = df.loc[30:44]\ndf_2021 = df.loc[45:59]\ndf_2022 = df.loc[60:74]\n\ntotal_2018 = df_2018.sort_values(\"total\", ascending = False).head()\ntotal_2019 = df_2019.sort_values(\"total\", ascending = False).head()\ntotal_2020 = df_2020.sort_values(\"total\", ascending = False).head()\ntotal_2021 = df_2021.sort_values(\"total\", ascending = False).head()\ntotal_2022 = df_2022.sort_values(\"total\", ascending = False).head()\n\ntotal_all = pd.concat([total_2018, total_2019, total_2020, total_2021, total_2022]).iloc[:, :3]\ntotal_all_pivot = total_all.pivot(index='year', columns='item', values='total')\ntotal_all_pivot.plot(kind='bar', figsize=(10, 6))\n\nfig = px.bar(total_all_pivot, title='년도별 여행지 선택 5순위', labels={'value': '총합', 'year': '년도'})\n# 레이아웃 설정\nfig.update_layout(\n    xaxis_title='Year',\n    yaxis_title='Total',\n    legend_title_text='Item',\n    legend=dict(\n        x=1,  # x 위치 (1은 그래프의 가장 오른쪽)\n        y=1,  # y 위치 (1은 그래프의 가장 위쪽)\n        xanchor='left',  # x 기준점\n        yanchor='top'  # y 기준점\n    )\n)\n\nfig.show()"
  },
  {
    "objectID": "현주.html#여행을-선택하는-이유",
    "href": "현주.html#여행을-선택하는-이유",
    "title": "여행을 선택하는 이유",
    "section": "여행을 선택하는 이유",
    "text": "여행을 선택하는 이유\n\n#선 그래프\nvisualappeal = total_all.query(\"item == '볼거리 제공'\")\nPopularity = total_all.query(\"item == '여행지 지명도'\")\ntime = total_all.query(\"item == '여행할 수 있는 시간'\")\n\n\n# 선 그래프 생성\nplt.figure(figsize=(10, 6))\nplt.plot(visualappeal[\"year\"], visualappeal[\"total\"], marker='o',label=\"볼거리 제공\")\nplt.plot(Popularity[\"year\"], Popularity[\"total\"], marker='o',label=\"여행지 지명도\")\nplt.plot(time[\"year\"], time[\"total\"], marker='o',label=\"여행할 수 있는 시간\")\n\n\n# 그래프에 제목과 축 레이블 추가\nplt.title(\"여행을 선택하는 이유 - 전체\")\nplt.xlabel(\"년도\")\nplt.ylabel(\"전체 %\")\nplt.legend(fontsize='x-small',loc='center left')\nplt.show()"
  },
  {
    "objectID": "현주.html#여행지-고르는-이유---남자",
    "href": "현주.html#여행지-고르는-이유---남자",
    "title": "여행을 선택하는 이유",
    "section": "여행지 고르는 이유 - 남자",
    "text": "여행지 고르는 이유 - 남자\n\n#남자\nmale_2018 = df_2018[[\"item\", \"male\"]].sort_values(by=\"item\")\nmale_2019 = df_2019[[\"item\", \"male\"]].sort_values(by=\"item\")\nmale_2020 = df_2020[[\"item\", \"male\"]].sort_values(by=\"item\")\nmale_2021 = df_2021[[\"item\", \"male\"]].sort_values(by=\"item\")\nmale_2022 = df_2022[[\"item\", \"male\"]].sort_values(by=\"item\")\n\nmale_All = pd.merge(male_2018, male_2019, how = 'left', on = 'item')\nmale_All = pd.merge(male_All, male_2020, how = 'left', on = 'item', suffixes=('', '_2020'))\nmale_All = pd.merge(male_All, male_2021, how = 'left', on = 'item', suffixes=('', '_2021'))\nmale_All = pd.merge(male_All, male_2022, how = 'left', on = 'item', suffixes=('', '_2022'))\n\n\n# 각 연도별 열 이름 변경 (이미 올바르게 되어있다면 생략 가능)\nmale_All.columns = ['item', 'male_2018', 'male_2019', 'male_2020', 'male_2021', 'male_2022']\n\n# 각 행의 총합을 계산하여 새로운 열에 추가합니다.\nmale_All['total_male'] = male_All[['male_2018', 'male_2019', 'male_2020', 'male_2021', 'male_2022']].sum(axis=1)\n\n# 필요 없는 열 삭제 및 total_male 기준으로 정렬\nmale_All = male_All.drop(columns=['male_2018', 'male_2019', 'male_2020', 'male_2021', 'male_2022']).sort_values(by='total_male', ascending=False)\n\nmale_All.head()\n\nM = male_All.head().plot.bar(rot = 0, color='green', title='여행지 고르는 이유 순위 - 남자')\nM.set_xticklabels(['볼거리', '지명도', '이동거리', '여행시간', '동반자유형'])\n\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "현주.html#여행지-고르는-이유---여자",
    "href": "현주.html#여행지-고르는-이유---여자",
    "title": "여행을 선택하는 이유",
    "section": "여행지 고르는 이유 - 여자",
    "text": "여행지 고르는 이유 - 여자\n\n# 여자 데이터 정렬\nfemale_2018 = df_2018[[\"item\", \"female\"]].sort_values(by=\"item\")\nfemale_2019 = df_2019[[\"item\", \"female\"]].sort_values(by=\"item\")\nfemale_2020 = df_2020[[\"item\", \"female\"]].sort_values(by=\"item\")\nfemale_2021 = df_2021[[\"item\", \"female\"]].sort_values(by=\"item\")\nfemale_2022 = df_2022[[\"item\", \"female\"]].sort_values(by=\"item\")\n\n# 데이터 병합\nfemale_All = pd.merge(female_2018, female_2019, how='left', on='item', suffixes=('_2018', '_2019'))\nfemale_All = pd.merge(female_All, female_2020, how='left', on='item')\nfemale_All = pd.merge(female_All, female_2021, how='left', on='item')\nfemale_All = pd.merge(female_All, female_2022, how='left', on='item')\n\n# 각 연도별 열 이름 변경 (필요한 경우)\nfemale_All.columns = ['item', 'female_2018', 'female_2019', 'female_2020', 'female_2021', 'female_2022']\n\n# 각 행의 총합을 계산하여 새로운 열에 추가합니다.\nfemale_All['total_female'] = female_All[['female_2018', 'female_2019', 'female_2020', 'female_2021', 'female_2022']].sum(axis=1)\n\n# 필요 없는 열 삭제 및 total_female 기준으로 내림차순 정렬\nfemale_All = female_All.drop(columns=['female_2018', 'female_2019', 'female_2020', 'female_2021', 'female_2022']).sort_values(by='total_female', ascending=False)\n\nF =female_All.head().plot.bar(rot = 0, color='blue', title='여행지 고르는 이유 순위 - 여자')\nF.set_xticklabels(['볼거리', '지명도', '여행시간', '이동거리', '음식'])\n\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  }
]